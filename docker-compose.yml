version: '3.4'

services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: WebApplication/Dockerfile
    ports:
        - "80:80"
    environment:
      - MONGO_URI=mongodb://mongo-primary/sample
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - mongo1
    networks:
      - samplenet

  mongo1:
    container_name: mongo_primary
    image: ${DOCKER_REGISTRY-}mongo:3.6.9
    ports:
      - "27017:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--bind_ip_all" ]
    networks:
      samplenet:
        aliases:
          - "mongo-primary"

  mongo2:
    container_name: mongo_secondary_1
    image: ${DOCKER_REGISTRY-}mongo:3.6.9
    ports:
      - "27018:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--bind_ip_all" ]
    networks:
      samplenet:
        aliases:
          - "mongo-secondary-1"

  mongo3:
    container_name: mongo_secondary_2
    image: ${DOCKER_REGISTRY-}mongo:3.6.9
    ports:
      - "27019:27017"
    entrypoint: [ "/usr/bin/mongod", "--replSet", "rs", "--bind_ip_all" ]
    networks:
      samplenet:
        aliases:
          - "mongo-secondary-2"

  mongosetup:
    image: ${DOCKER_REGISTRY-}mongo:3.6.9
    volumes:
      - ./scripts:/scripts
    restart: always
    entrypoint: [ "bash", "/scripts/mongosetup.sh" ]
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      samplenet:
        aliases:
          - "mongo-aux"

networks:
  samplenet:
    driver: bridge
